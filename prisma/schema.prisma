generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Contains products infomration
model Product {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  description String
  imageUrl    String
  name        String
  price       Int
  CartItem    CartItem[]
  Stock       Stock[]

  // createAt    DateTime @default(now())
  // updateAt    DateTime @updatedAt
  @@map("products")
}

// Contains products stock information
model Stock {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int

  // createAt    DateTime @default(now())
  // updateAt    DateTime @updatedAt
  @@map("stocks")
}

// Contains cart information about user actual order
model Cart {
  id    String     @id @default(auto()) @map("_id") @db.ObjectId
  items CartItem[]

  // createAt    DateTime @default(now())
  // updateAt    DateTime @updatedAt
  @@map("carts")
}

// Contains one cart item from cart of actual user order
model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int
  cartId    String  @db.ObjectId
  cart      Cart    @relation(fields: [cartId], references: [id])

  // createAt    DateTime @default(now())
  // updateAt    DateTime @updatedAt
  @@map("cartitems")
}
